version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.2
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
  kafka:
    image: confluentinc/cp-kafka:5.4.2
    container_name: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
  kafka-generator:
    build: ./data-generator
    image: data-generator:latest
    container_name: kafka-generator
    depends_on:
      - kafka
  materialized:
    image: materialize/materialized:v0.9.0
    container_name: materialized
    init: true
    command: -w1 --disable-telemetry --experimental
    ports:
      - 6875:6875
  mzcli:
    image: materialize/cli
    container_name: mzcli
  postgres:
    build: ./postgres-image
    container_name: postgres
    ports:
     - 5432:5432
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
    volumes:
     - ${PWD}/postgres-image:/docker-entrypoint-initdb.d
  metabase:
    image: materialize/metabase:v0.0.5
    volumes:
      - ./metabase-data/metabase.db:/data/metabase.db
    depends_on:
       - materialized
    environment:
       - MB_DB_TYPE=h2
       - MB_DB_FILE=/data/metabase.db
    ports:
      - 3030:3000